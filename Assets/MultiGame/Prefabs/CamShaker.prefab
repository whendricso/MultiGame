%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!1 &8724238580619697990
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 4419771863481676099}
  - component: {fileID: 3111747640196476337}
  m_Layer: 0
  m_Name: CamShaker
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!4 &4419771863481676099
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 8724238580619697990}
  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
  m_LocalPosition: {x: 0, y: 0, z: 0}
  m_LocalScale: {x: 1, y: 1, z: 1}
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 0
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!114 &3111747640196476337
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 8724238580619697990}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4e474fa4df12df9429b3c69c721b000e, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  messages:
  - target: {fileID: 0}
    message: Shake
    msgOverride: 1
    messageIndex: 0
    possibleMessages:
    - Broadcast
    isDirty: 0
    sendMessageType: 0
    parameter: .125
    parameterMode: 2
  targetTag: MainCamera
  onStart: 0
  onUpdate: 0
  help:
    showInfo: 0
    helpText: 'This component sends messages to all objects of a given tag. Can activate
      automatically, or based on other message senders with ''Broadcast''. To use,
      add at least one Message to the ''Messages'' list above, and tag all target
      objects with an appropriate tag. Then, add that ''Target Tag'' in the appropriate
      field above.


      Since the Message list won''t likely show what you want
      when you click ''Refresh Messages'' just lock each message and type it in manually.
      You can find the available messages listed at the bottom of each MultiGame
      component. For non-MultiGame components, you can find messages by opening their
      source code. And function (even private ones!) with either no argument, or
      a single bool, int, float, or string argument may be used as a Message. Just
      make sure to type in the name exactly with no typos, and that it''s capitalized
      correctly (Messages are case-sensitive!)'
    videoLink: 
  debug: 0
  broadcastHelp:
    showInfo: 0
    messageName: Broadcast
    helpText: Send the 'Messages' to all objects in the scene with 'Target Tag'
    argumentType: 0
    argumentText: 
